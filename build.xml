<?xml version="1.0"?>
<project name="Embedded CST316 Project Test Build" default="targets" basedir=".">

    <!-- Set Global Properties For This Build -->
    <property name="src" location="airAutomation/src" />
	<property name="lib" location="airAutomation/lib" />
	<property name="test" location="airAutomation/src/testAirUI/airUI/pkg" />
    <property name="build" location="airAutomation/classes" />
    <property name="test.dir" location="airAutomation/classes/tests" />
    <property name="test.report.dir" location="airAutomation/testreport" />

    <path id="test.class.path">
        <pathelement location="${build}" />
        <pathelement location="${lib}/xbjlib-1.0.1.jar" />
    	<pathelement location="${lib}/junit-4.12.jar" />
    	<pathelement location="${lib}/hamcrest-core-1.3.jar" />
    	<pathelement location="${lib}/findbugs-ant.jar" />
    	<pathelement location="${lib}/findbugs.jar" />
    	<pathelement location="${lib}/pmd-core-5.2.3.jar" />
    	<pathelement location="${lib}/pmd-java-5.2.3.jar" />
    </path>

    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="test.class.path" />
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${lib}/findbugs-ant.jar"/>

    <property name="pmd.path" location="airAutomation/lib/pmd-bin-5.3.0" />

    <path id="test.class.path">
        <pathelement location="${build}" />
    	<fileset dir="${lib}">
    		<include name="**/*.jar" />
    	</fileset>
    </path>

    <path id="pmd.classpath">
        <fileset dir="${pmd.path}/lib" includes="*.jar"/>
    </path>

    <path id="compile.class.path">
        <pathelement location="${build}" />
        <fileset dir="${lib}">
    		<include name="**/*.jar" />
    	</fileset>
    </path>

    <target name="targets">

        <!-- Display Available Targets -->
        <echo message="targets are clean, prepare, compile.test, test, build, execute"/>
    </target>

    <target name="clean">
        <!-- Delete The ${build} Directory Tree -->
        <delete dir="${build}" />
        <delete dir="${test.report.dir}" />
        <delete dir="${test.dir}" />
    </target>

    <target name="prepare">
        <!-- Create The Time Stamp -->
        <tstamp/>
        <!-- Create The Build Directory Structure Used By Compile -->
        <mkdir dir="${build}" />
        <mkdir dir="${test.dir}" />
        <mkdir dir="${test.report.dir}" />
    </target>

    <target name="compile.test" depends="clean, prepare" description="Compile Unit Tests">
        <!-- Compile All Classes -->
        <javac srcdir="${src}"
            includeantruntime="false"
            destdir="${build}" >
            <classpath refid="test.class.path" />
        </javac>
        <javac srcdir="${test}"
            includeantruntime="false"
            destdir="${test.dir}" >
            <classpath refid="test.class.path" />
        </javac>
    </target>

    <target name="test" depends="compile.test" description="Execute Unit Tests">
        <!-- Run Junit tests -->
    	<property name="junit.path" refid="test.class.path"/>
        <junit printsummary="true" fork="true" haltonfailure="no">
            <classpath refid="test.class.path" />
            <classpath>
                <pathelement location="${test.dir}" />
            </classpath>
            <formatter type="xml" />
            <batchtest fork="true" todir="${test.report.dir}">
                <fileset dir="${src}">
                    <include name="**/**Test.java" />
                </fileset>
            </batchtest>
        </junit>

    <!-- Run PMD -->
	<echo message="Running PMD"/>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />
	<pmd shortFilenames="true">
		<sourceLanguage name="java" version="1.8"/>
		<ruleset>rulesets/java/design.xml</ruleset>
		<ruleset>java-basic</ruleset>
		<ruleset>java-naming</ruleset>
		<ruleset>java-empty</ruleset>
		<auxclasspath refid="test.class.path"/>
		<formatter type="xml" toFile="${test.report.dir}/pmd.xml">
			<param name="linkPrefix" value="http://pmd.sourceforge.net/xref/"/>
		</formatter>
		<fileset dir="${src}">
			<include name="**/*.java"/>
		</fileset>
	</pmd>
    <!-- Run Findbugs -->
	<echo message="Running Findbugs" />
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${lib}/findbugs-ant.jar"/>
	<findbugs home="${lib}" output="xml" outputFile="${test.report.dir}/findbugs.xml">
		<auxClasspath refid="test.class.path"/>
		<sourcePath path="${src}"/>
		<class location="${build}"/>
	</findbugs>
</target>

    <target name="build" depends="clean, prepare" description="Compile class files for program execution">
        <!-- Build Project Files -->
        <echo message="Build source files" />
        <javac srcdir="${src}"
            includeantruntime="false"
            destdir="${build}">
            <classpath refid="compile.class.path"/>
        </javac>
    </target>
    
    <target name="jar" depends="build" description="Package all files into jar">
        <manifestclasspath property="jar.classpath" jarfile="airAutomation/airAutomation.jar">
            <classpath refid="compile.class.path" />
        </manifestclasspath>
        <jar destfile="airAutomation/airAutomation.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="airUI.pkg.MainDriver" />
                <attribute name="Class-Path" value="${jar.classpath}" />
            </manifest>
        </jar>
    </target>

    <target name="execute" depends="jar" description="Execute jar to run program">
        <!-- Execute The Program -->
        <echo message="Compile and execute AirUI Program" />
        <java classname="airUI.pkg.MainDriver" fork="true">
            <arg value="-h"/>
            <classpath>
                <pathelement location="airAutomation/airAutomation.jar"/>
                <pathelement path="${compile.class.path}"/>
            </classpath>
        </java>
    </target>
</project>
